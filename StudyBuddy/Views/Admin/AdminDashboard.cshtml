@model List<StudyBuddy.Controllers.AdminController.UserWithBlockStatus>
@using StudyBuddy.Shared.Models

@{
    Layout = "_AdminLayout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <style>
        .modal-dialog-centered {
            display: flex;
            align-items: center;
            min-height: calc(100% - 1rem);
        }

        .modal-content {
            margin: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Dashboard</h1>
        <div class="row">
            <div class="col-md-12">
                <canvas id="myChart"></canvas>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="form-group">
                    <input type="radio" name="userFilter" value="blocked" id="blockedUsers">
                    <label for="blockedUsers">Blocked users</label>
                    <input type="radio" name="userFilter" value="active" id="activeUsers">
                    <label for="activeUsers">Active users</label>
                </div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Id</th>
                            <th>State</th>
                            <th>Action</th>
                            <th>Duration</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.User.Username</td>
                                <td>@item.User.Id</td>
                                <td>@(item.IsBlocked ? "Blocked" : "Active")</td>
                                <td>
                                    @if (item.IsBlocked)
                                    {
                                        <button onclick="askUnblockConfirm('@item.BlockId')" class="btn btn-success">Unblock</button>
                                    }
                                    else
                                    {
                                        <button onclick="askBlockReason('@item.User.Id')" class="btn btn-warning">Block</button>
                                    }
                                    <button class="btn btn-danger">Delete</button>
                                </td>
                                <td>@(item.IsBlocked ? "Until " + @item.BlockedUntil?.ToString("yyyy-MM-dd") : "-")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" id="blockReasonModal" tabindex="-1" role="dialog" aria-labelledby="blockReasonModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="blockReasonModalLabel">Enter Block Reason and Duration</h5>
                    <button type="button" class="close" aria-label="Close" onclick="closeBlockReasonModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="text" class="form-control" id="blockReasonInput" placeholder="Reason for blocking">
                    <div class="invalid-feedback">
                        Please enter a reason for blocking.
                    </div>
                    <input type="date" class="form-control mt-2" id="blockUntilInput" placeholder="Block until (optional)">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeBlockReasonModal()">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitBlock()">Block User</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="unblockConfirmModal" tabindex="-1" role="dialog" aria-labelledby="unblockConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="unblockConfirmModalLabel">Confirm Unblock</h5>
                    <button type="button" class="close" aria-label="Close" onclick="closeUnblockConfirmModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to unblock this user?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeUnblockConfirmModal()">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitUnblock()">Unblock User</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentUserId = 0;
        let currentBlockId = 0;

        function askBlockReason(userId) {
            currentUserId = userId;
            $('#blockReasonModal').modal('show');
        }

        function closeBlockReasonModal() {
            currentUserId = 0;
            document.getElementById('blockReasonInput').value = '';
            document.getElementById('blockReasonInput').classList.remove('is-invalid');
            $('#blockReasonModal').modal('hide');
        }

        function submitBlock() {
            const reasonInput = document.getElementById('blockReasonInput');
            const reason = reasonInput.value;
            const blockUntilInput = document.getElementById('blockUntilInput');
            const blockUntil = blockUntilInput.value ? new Date(blockUntilInput.value).toISOString() : null;

            if (!reason) {
                reasonInput.classList.add('is-invalid');
                return;
            }
            reasonInput.classList.remove('is-invalid');
            $('#blockReasonModal').modal('hide'); 

            document.getElementById('blockFormUserId').value = currentUserId;
            document.getElementById('blockFormReason').value = reason;
            document.getElementById('blockFormUntil').value = blockUntil;
            document.getElementById('blockForm').submit();
        }

        function askUnblockConfirm(blockId) {
            currentBlockId = blockId;
            $('#unblockConfirmModal').modal('show');
        }

        function closeUnblockConfirmModal() {
            currentBlockId = 0;
            $('#unblockConfirmModal').modal('hide');
        }

        function submitUnblock() {
            $('#unblockConfirmModal').modal('hide');
            document.getElementById('unblockFormBlockId').value = currentBlockId;
            document.getElementById('unblockForm').submit();
        }

        document.addEventListener('DOMContentLoaded', function () {
            const tableRows = document.querySelectorAll('table tbody tr');
            let activeCount = 0;
            let blockedCount = 0;

            tableRows.forEach(row => {
                const state = row.cells[2].textContent;
                if (state === 'Active') {
                    activeCount++;
                } else if (state === 'Blocked') {
                    blockedCount++;
                }
            });

            const ctx = document.getElementById('myChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Blocked users', 'Active users'],
                    datasets: [{
                        data: [blockedCount, activeCount],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    legend: {
                        display: false
                    }
                }
            });
        });
    </script>

    <form id="blockForm" method="post" action="/Admin/BlockUser" style="display:none;">
        <input type="hidden" id="blockFormUserId" name="BlockedUserId" />
        <input type="hidden" id="blockFormReason" name="SystemBlockReason.Reason" />
        <input type="hidden" id="blockFormUntil" name="BlockedUntil" />
    </form>


    <form id="unblockForm" method="post" action="/Admin/UnblockUser" style="display:none;">
        <input type="hidden" id="unblockFormBlockId" name="blockId" />
    </form>
</body>
</html>
