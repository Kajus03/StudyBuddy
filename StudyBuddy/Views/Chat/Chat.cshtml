@model StudyBuddy.Controllers.ChatController.ChatViewModel;

@{
    ViewBag.Title = "Chat";
    Layout = "_Layout";
}

<div class="container vh-100 d-flex flex-column">
    <div class="card min-vh-100 d-flex flex-column">
        <div class="row flex-grow-1">
            <div class="col-12 col-lg-5 col-xl-3 border-end">
                <div class="px-4 d-none d-md-block">
                    <div class="d-flex align-items-center">
                        <div class="flex-grow-1">
                            <input type="text" class="form-control my-3" id="searchInput" placeholder="Search...">
                        </div>
                    </div>
                </div>
                <ul id="userList" class="list-group flex-grow-1">
                    @if (Model.Matches.Any())
                    {
                        @foreach (var user in Model.Matches)
                        {
                            <li class="list-group-item border border-0 user-list-item">
                                <div class="d-flex align-items-start">
                                    <a href="@Url.Action("ChatWithUser", "Chat", new { otherUserId = user!.Id })">
                                        <img src="@user.Traits.AvatarPath" class="rounded-circle me-1" alt="@user.Username" width="40" height="40">
                                    </a>
                                    <div class="fw-bold flex-grow-1 ms-3 user-name">
                                        @user.Username
                                    </div >
									<button class="blocker-btn" user-id="@Model.CurrentUser.Id.ToString()" user-to-block="@user.Id">
										Block
									</button>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="list-group-item border border-0 d-flex align-items-center justify-content-center">
                            <div class="text-center">
                                No available chatters
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div class="col-12 col-lg-7 col-xl-9 d-flex align-items-center justify-content-center">
                <div class="text-center">
                    <h3 class="text-muted">No chats selected</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/search.js"></script>
<script>
	// Add click event listener to the buttons with class blocker-btn
	document.querySelectorAll('.blocker-btn').forEach(button => {
		button.addEventListener('click', function () {
			// Get the user id from data attribute
			const userId = this.getAttribute('user-id');
			const userToBlockId = this.getAttribute('user-to-block');
			console.log(userId, userToBlockId)
			// Make AJAX request to block the user
			fetch(`http://localhost:8100/api/v1/user/${userId}/user-blocked/${userToBlockId
}`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				// You can add a request body if necessary
				// body: JSON.stringify({}),
			})
				.then(response => {
					if (!response.ok) {
						throw new Error('Failed to block user');
					}
					// Handle success if needed
					console.log('User blocked successfully');
					location.reload();
				})
				.catch(error => {
					// Handle error
					console.error(error.message);
				});
		});
	});
</script>
